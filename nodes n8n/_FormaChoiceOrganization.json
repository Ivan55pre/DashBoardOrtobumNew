{
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Возвращает данные в формате, удобном для последующих действий\nreturn {\nuser_id: $input.first().json.body.user_id,\nval: $input.first().json.body.val\n};\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        0
      ],
      "id": "99c29d93-2762-4e74-a6d8-8be8ec4cdc32",
      "name": "Code"
    },
    {
      "parameters": {
        "path": "VoprosOrganization",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "9ded2b58-0887-4480-99c7-1bf6a8bad91e",
      "name": "Webhook",
      "webhookId": "e34af3f6-4f18-49ec-b181-79eb0d74a89f"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "VoprosOrganization",
        "options": {
          "noResponseBody": false
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        440,
        0
      ],
      "id": "ce4e248f-6f07-4ba8-a6ca-3e5dc00ab2e4",
      "name": "Webhook1",
      "webhookId": "e34af3f6-4f18-49ec-b181-79eb0d74a89f"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "=<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Выбор организации</title>\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n  <style>\n    body { font-family: system-ui, sans-serif; background: #f8f8fa; margin:0; padding:2rem; }\n    .container { background:#fff; border-radius:16px; max-width:350px; margin:2rem auto; box-shadow:0 4px 18px 0 #0001; padding:2rem; }\n    label { display:block; margin-bottom:0.7rem; font-size:1.1rem; }\n    select { width:100%; font-size:1rem; padding:0.5rem; margin-bottom:1.2rem; border-radius:7px; border:1px solid #aaa;}\n    button { width:100%; font-size:1.1rem; padding:0.7rem; border-radius:8px; border:none; background:#0088cc; color:#fff; font-weight:600; cursor:pointer;}\n    button:active { background:#005c8c; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <form id=\"orgForm\">\n      <label for=\"orgSelect\">Выберите организацию</label>\n      <select id=\"orgSelect\" name=\"название_организации\" required>\n        <!-- Варианты подставляются динамически -->\n      </select>\n      <button type=\"submit\">Подтвердить</button>\n    </form>\n  </div>\n  <script>\n    // Получаем список организаций из window.INIT_DATA или из URL-параметра orgs\n    let orgs = window.INIT_DATA;\n    if (!orgs) {\n      const params = new URLSearchParams(window.location.search);\n      if(params.has('orgs')) {\n        orgs = decodeURIComponent(params.get('orgs')).split(',');\n      }\n    }\n    if (!orgs || !Array.isArray(orgs)) orgs = [\"Организация 1\", \"Организация 2\"];\n\n    // Заполняем select\n    const sel = document.getElementById('orgSelect');\n    orgs.forEach(name => {\n      const opt = document.createElement('option');\n      opt.value = name;\n      opt.textContent = name;\n      sel.appendChild(opt);\n    });\n\n    // Получаем user_id из URL (если нужен)\n    const params = new URLSearchParams(window.location.search);\n    const userId = params.get('user_id');\n\ndocument.getElementById('orgForm').addEventListener('submit', function(e){\n    e.preventDefault();\n    const val = sel.value;\n    const userId = params.get('user_id');\n\n    // Отправка в n8n\n    fetch('https://n8n.preivan.ru/webhook/VoprosOrganization', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            user_id: userId,\n            val: val\n        })\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log(data);\n        if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.close) {\n            Telegram.WebApp.close();\n        }\n    })\n    .catch(error => {\n        console.error('Ошибка:', error);\n        if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.close) {\n            window.Telegram.WebApp.close();\n        }\n    });\n});\n\t\n\t\n\n    // Если пользователь просто закрыл окно — обычно этого достаточно:\n    window.onbeforeunload = function() {\n      // Просто placeholder. Если хотите — отправляйте событие в n8n здесь.\n    };\n  </script>\n</body>\n</html>\n",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        180,
        0
      ],
      "id": "a950dd40-5d2c-4d32-9f03-ad8ceb5183d5",
      "name": "Respond to Webhook2",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "chatId": "={{ $json.user_id }}",
        "text": "=Вы выбрали: {{$json[\"val\"]}}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        820,
        0
      ],
      "id": "07a6851e-076a-4aff-b7ca-282433ab8fa4",
      "name": "Send a text message",
      "webhookId": "4a9fc60a-0ab1-4235-a853-9254743b2c41",
      "credentials": {
        "telegramApi": {
          "id": "KWCdUijqTdWqE6iq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://n8n.preivan.ru/webhook/WorkFromUserDashBoard?user_id={{ $('Code').item.json.user_id }}&name_organization={{ $('Code').item.json.val }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        0
      ],
      "id": "968a0453-add8-4186-83bd-c7e9eb766bf6",
      "name": "HTTP Request"
    }
  ],
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "411381c0a8226c521c479bd16dc68476d927456bda1f616033b738dfd6405a94"
  }
}